// Auto-generated from index.html.
// DO NOT EDIT.

library intlx.age.example;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import '_from_packages/intlx/components.dart';
import 'dart:html';
import 'package:web_ui/web_ui.dart';
import 'package:intl/intl.dart';
import 'package:intl/intl_browser.dart';
import 'package:intlx/intlx.dart';
import 'package:intlx/relative_time_locale_data.dart' as relative_time_data;
import 'package:intlx/iterable_locale_data.dart' as iterable_data;
import 'package:intlx/plural_locale_data.dart' as plural_data;
import 'package:intlx/src/relative_time/relative_time_locale_list.dart';
import 'package:intlx/src/deprecated_locale_map.dart';
import 'package:intlx/src/util.dart';
part '../locale_names.dart';


// Original code


// locale data (use relative time for no particular reason since they're all the same)
final __changes = new __observe.Observable();

dynamic __$selectedLocale = 'en';
dynamic get selectedLocale {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'selectedLocale');
  }
  return __$selectedLocale;
}
set selectedLocale(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'selectedLocale',
        __$selectedLocale, value);
  }
  __$selectedLocale = value;
}
dynamic __$locales = relativeTimeLocales;
dynamic get locales {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'locales');
  }
  return __$locales;
}
set locales(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'locales',
        __$locales, value);
  }
  __$locales = value;
}

// iterable
dynamic __$iterableData = iterable_data.ALL;
dynamic get iterableData {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'iterableData');
  }
  return __$iterableData;
}
set iterableData(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'iterableData',
        __$iterableData, value);
  }
  __$iterableData = value;
}
get iterableFormat => new IterableFormat(locale: selectedLocale);
dynamic __$counts = range(4);
dynamic get counts {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'counts');
  }
  return __$counts;
}
set counts(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'counts',
        __$counts, value);
  }
  __$counts = value;
}
String formatCount(int count) => iterableFormat.format(range(count, 1));
String toStringCount(int count) => range(count, 1).toList().toString();

// plural
dynamic __$pluralData = plural_data.ALL;
dynamic get pluralData {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'pluralData');
  }
  return __$pluralData;
}
set pluralData(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'pluralData',
        __$pluralData, value);
  }
  __$pluralData = value;
}
get pluralFormat => new PluralFormat(pluralCases, locale: selectedLocale, pattern: "{0}");
dynamic __$pluralCases = {
  "0": "no books", 
  "one": "{0} book", 
  "other": "{0} books"};
dynamic get pluralCases {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'pluralCases');
  }
  return __$pluralCases;
}
set pluralCases(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'pluralCases',
        __$pluralCases, value);
  }
  __$pluralCases = value;
}
String get formattedPlural => pluralFormat.format(plural);
dynamic __$plural = 0;
dynamic get plural {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'plural');
  }
  return __$plural;
}
set plural(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'plural',
        __$plural, value);
  }
  __$plural = value;
}

// relative time
dynamic __$relativeTimeData = relative_time_data.ALL;
dynamic get relativeTimeData {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'relativeTimeData');
  }
  return __$relativeTimeData;
}
set relativeTimeData(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'relativeTimeData',
        __$relativeTimeData, value);
  }
  __$relativeTimeData = value;
}
get defaultAgeFormat => new AgeFormat(locale: selectedLocale);
get secondsAgeFormat => new AgeFormat(locale: selectedLocale, rounder: new DurationRounder.staticUnit(TimeUnit.SECOND));
get durationFormat => new DurationFormat(locale: selectedLocale);
dynamic __$dateTime = new DateTime.now().add(const Duration(seconds: 30));
dynamic get dateTime {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'dateTime');
  }
  return __$dateTime;
}
set dateTime(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'dateTime',
        __$dateTime, value);
  }
  __$dateTime = value;
}
dynamic __$timeUnit = "0";
dynamic get timeUnit {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'timeUnit');
  }
  return __$timeUnit;
}
set timeUnit(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'timeUnit',
        __$timeUnit, value);
  }
  __$timeUnit = value;
}
dynamic __$timeUnitCount = "45";
dynamic get timeUnitCount {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'timeUnitCount');
  }
  return __$timeUnitCount;
}
set timeUnitCount(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'timeUnitCount',
        __$timeUnitCount, value);
  }
  __$timeUnitCount = value;
}
String get duration => durationFormat.format(new RoundDuration(TimeUnit.values[int.parse(timeUnit, onError: (_) => 0)], int.parse(timeUnitCount, onError: (_) => 0)).toDuration());
DateTime sod() => _withNow((now) => new DateTime(now.year, now.month, now.day));
DateTime som() => _withNow((now) => new DateTime(now.year, now.month));
DateTime soy() => _withNow((now) => new DateTime(now.year));
DateTime eod() => _withNow((now) => new DateTime(now.year, now.month, now.day + 1));
DateTime eom() => _withNow((now) => new DateTime(now.year, now.month + 1));
DateTime eoy() => _withNow((now) => new DateTime(now.year + 1));
DateTime _withNow(transform) => transform(new DateTime.now());

pillClass(String locale) => locale == selectedLocale ? 'active' : '';

void main() {
  relativeTimeData.load();
  iterableData.load();
  pluralData.load();
  findSystemLocale().then((locale) {
    var foundLocale = Intl.verifiedLocale(locale, locales.contains, onFailure: (_) => null);
    if(foundLocale != null) {
      Intl.systemLocale = selectedLocale = foundLocale;
    }
  });
}

// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<li class=""><a href="#_"></a></li>'), __html1 = new autogenerated.Element.html('<b>"</b>'), __html10 = new autogenerated.Element.html('<span class="controls"><select class="span2"><option value="0">seconds</option><option value="1">minutes</option><option value="2">hours</option><option value="3">days</option></select></span>'), __html11 = new autogenerated.Element.html('<span class="controls"><input type="number" class="input-mini"></span>'), __html2 = new autogenerated.Element.html('<b>"</b>'), __html3 = new autogenerated.Element.html('<b>"</b>'), __html4 = new autogenerated.Element.html('<b>"</b>'), __html5 = new autogenerated.Element.html('<b>"</b>'), __html6 = new autogenerated.Element.html('<b>"</b>'), __html7 = new autogenerated.Element.html('<span style="float: right"></span>'), __html8 = new autogenerated.Element.html('<b>"</b>'), __html9 = new autogenerated.Element.html('<b>"</b>');
  var __e10, __e11, __e12, __e13, __e14, __e15, __e16, __e17, __e21, __e22, __e23, __e24, __e26, __e29, __e3, __e30, __e33, __e34, __e6;
  var __t = new autogenerated.Template(__root);
  __e3 = __root.nodes[3].nodes[5].nodes[1];
  __t.loop(__e3, () => localeNames.keys, ($list, $index, __t) {
    var locale = $list[$index];
    var __e1, __e2;
    __e2 = __html0.clone(true);
    __e1 = __e2.nodes[0];
    var __binding0 = __t.contentBind(() => localeNames[locale], false);
    __e1.nodes.add(__binding0);
    __t.listen(__e1.onClick, ($event) { selectedLocale = locale; });
    __t.bindClass(__e2, () => pillClass(locale), false);
  __t.addAll([new autogenerated.Text('\n        '),
      __e2,
      new autogenerated.Text('\n      ')]);
  });
  __e10 = __root.nodes[3].nodes[9].nodes[1].nodes[0];
  var __binding4 = __t.contentBind(() => selectedLocale, false);
  __e6 = __html7.clone(true);
  var __binding5 = __t.contentBind(() => formatCount(0), false);
  __e6.nodes.addAll([__html8.clone(true),
      __binding5,
      __html9.clone(true)]);
  var __binding7 = __t.contentBind(() => formatCount(1), false);
  var __binding8 = __t.contentBind(() => formatCount(2), false);
  var __binding9 = __t.contentBind(() => formatCount(3), false);
  __e10.nodes.addAll([new autogenerated.Text('var iterableFormat = new IterableFormat(locale: "'),
      __binding4,
      new autogenerated.Text('");\niterableFormat.format([]) '),
      __e6,
      new autogenerated.Text('\niterableFormat.format([1]) -> '),
      __html1.clone(true),
      __binding7,
      __html2.clone(true),
      new autogenerated.Text('\niterableFormat.format([1, 2]) -> '),
      __html3.clone(true),
      __binding8,
      __html4.clone(true),
      new autogenerated.Text('\niterableFormat.format([1, 2, 3]) -> '),
      __html5.clone(true),
      __binding9,
      __html6.clone(true)]);
  __e11 = __root.nodes[3].nodes[13].nodes[3];
  __t.listen(__e11.onClick, ($event) { dateTime = sod(); });
  __e12 = __root.nodes[3].nodes[13].nodes[5];
  __t.listen(__e12.onClick, ($event) { dateTime = som(); });
  __e13 = __root.nodes[3].nodes[13].nodes[7];
  __t.listen(__e13.onClick, ($event) { dateTime = soy(); });
  __e14 = __root.nodes[3].nodes[15];
  __t.listen(__e14.onClick, ($event) { dateTime = new DateTime.now(); });
  __e15 = __root.nodes[3].nodes[17].nodes[3];
  __t.listen(__e15.onClick, ($event) { dateTime = eod(); });
  __e16 = __root.nodes[3].nodes[17].nodes[5];
  __t.listen(__e16.onClick, ($event) { dateTime = eom(); });
  __e17 = __root.nodes[3].nodes[17].nodes[7];
  __t.listen(__e17.onClick, ($event) { dateTime = eoy(); });
  __e26 = __root.nodes[3].nodes[19];
  var __binding18 = __t.contentBind(() => selectedLocale, false);
  var __binding19 = __t.contentBind(() => selectedLocale, false);
  var __binding20 = __t.contentBind(() => selectedLocale, false);
  __e22 = __html10.clone(true);
  __e21 = __e22.nodes[0];
  __t.listen(__e21.onChange, ($event) { timeUnit = __e21.value; });
  __t.oneWayBind(() => timeUnit, (e) { if (__e21.value != e) __e21.value = e; }, false, false);
  __e24 = __html11.clone(true);
  __e23 = __e24.nodes[0];
  __t.listen(__e23.onInput, ($event) { timeUnitCount = __e23.value; });
  __t.oneWayBind(() => timeUnitCount, (e) { if (__e23.value != e) __e23.value = e; }, false, false);
  var __binding25 = __t.contentBind(() => duration, false);
  __e26.nodes.addAll([new autogenerated.Text('var durationFormat = new DurationFormat(locale: "'),
      __binding18,
      new autogenerated.Text('");\nvar defaultAgeFormat = new AgeFormat(locale: "'),
      __binding19,
      new autogenerated.Text('");\nvar secondsAgeFormat = new AgeFormat(locale: "'),
      __binding20,
      new autogenerated.Text('", rounder: new DurationRounder.staticUnit(TimeUnit.SECOND));\nvar duration = new Duration('),
      __e22,
      new autogenerated.Text(': '),
      __e24,
      new autogenerated.Text(');\ndurationFormat.format(duration) '),
      __binding25,
      new autogenerated.Text('\n')]);
  __e29 = __root.nodes[3].nodes[23].nodes[1].nodes[0];
  var __binding27 = __t.contentBind(() => dateTime, false);
  var __binding28 = __t.contentBind(() => defaultAgeFormat, false);
  __e29.nodes.addAll([new autogenerated.Text('<intlx-age \n  value="'),
      __binding27,
      new autogenerated.Text('" \n  format="'),
      __binding28,
      new autogenerated.Text('">\n</intlx-age>')]);
  __e30 = __root.nodes[3].nodes[23].nodes[3].nodes[0];
  __t.oneWayBind(() => defaultAgeFormat, (e) { if (__e30.xtag.format != e) __e30.xtag.format = e; }, false, false);
  __t.oneWayBind(() => dateTime, (e) { if (__e30.xtag.value != e) __e30.xtag.value = e; }, false, false);
  __t.component(new AgeComponent()..host = __e30);
  __e33 = __root.nodes[3].nodes[25].nodes[1].nodes[0];
  var __binding31 = __t.contentBind(() => dateTime, false);
  var __binding32 = __t.contentBind(() => secondsAgeFormat, false);
  __e33.nodes.addAll([new autogenerated.Text('<intlx-age \n  value="'),
      __binding31,
      new autogenerated.Text('" \n  format="'),
      __binding32,
      new autogenerated.Text('">\n</intlx-age>')]);
  __e34 = __root.nodes[3].nodes[25].nodes[3].nodes[0];
  __t.oneWayBind(() => secondsAgeFormat, (e) { if (__e34.xtag.format != e) __e34.xtag.format = e; }, false, false);
  __t.oneWayBind(() => dateTime, (e) { if (__e34.xtag.value != e) __e34.xtag.value = e; }, false, false);
  __t.component(new AgeComponent()..host = __e34);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=app.dart.map