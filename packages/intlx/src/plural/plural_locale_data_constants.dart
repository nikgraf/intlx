// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// DO NOT EDIT. This file is autogenerated by script, see
// "intlx/tool/plural/code_build.dart"

part of intlx.plural_locale_data;

final LocaleData AF = 
  new PluralLocaleDataImpl("af", () => symbols_AF.symbols);
final LocaleData AM = 
  new PluralLocaleDataImpl("am", () => symbols_AM.symbols);
final LocaleData AR = 
  new PluralLocaleDataImpl("ar", () => symbols_AR.symbols);
final LocaleData BG = 
  new PluralLocaleDataImpl("bg", () => symbols_BG.symbols);
final LocaleData BN = 
  new PluralLocaleDataImpl("bn", () => symbols_BN.symbols);
final LocaleData CA = 
  new PluralLocaleDataImpl("ca", () => symbols_CA.symbols);
final LocaleData CS = 
  new PluralLocaleDataImpl("cs", () => symbols_CS.symbols);
final LocaleData DA = 
  new PluralLocaleDataImpl("da", () => symbols_DA.symbols);
final LocaleData DE = 
  new PluralLocaleDataImpl("de", () => symbols_DE.symbols);
final LocaleData EL = 
  new PluralLocaleDataImpl("el", () => symbols_EL.symbols);
final LocaleData EN = 
  new PluralLocaleDataImpl("en", () => symbols_EN.symbols);
final LocaleData ES = 
  new PluralLocaleDataImpl("es", () => symbols_ES.symbols);
final LocaleData ET = 
  new PluralLocaleDataImpl("et", () => symbols_ET.symbols);
final LocaleData EU = 
  new PluralLocaleDataImpl("eu", () => symbols_EU.symbols);
final LocaleData FA = 
  new PluralLocaleDataImpl("fa", () => symbols_FA.symbols);
final LocaleData FI = 
  new PluralLocaleDataImpl("fi", () => symbols_FI.symbols);
final LocaleData FIL = 
  new PluralLocaleDataImpl("fil", () => symbols_FIL.symbols);
final LocaleData FR = 
  new PluralLocaleDataImpl("fr", () => symbols_FR.symbols);
final LocaleData GL = 
  new PluralLocaleDataImpl("gl", () => symbols_GL.symbols);
final LocaleData GSW = 
  new PluralLocaleDataImpl("gsw", () => symbols_GSW.symbols);
final LocaleData GU = 
  new PluralLocaleDataImpl("gu", () => symbols_GU.symbols);
final LocaleData HE = 
  new PluralLocaleDataImpl("he", () => symbols_HE.symbols);
final LocaleData HI = 
  new PluralLocaleDataImpl("hi", () => symbols_HI.symbols);
final LocaleData HR = 
  new PluralLocaleDataImpl("hr", () => symbols_HR.symbols);
final LocaleData HU = 
  new PluralLocaleDataImpl("hu", () => symbols_HU.symbols);
final LocaleData ID = 
  new PluralLocaleDataImpl("id", () => symbols_ID.symbols);
final LocaleData IN = 
  new PluralLocaleDataImpl("in", () => symbols_IN.symbols);
final LocaleData IS = 
  new PluralLocaleDataImpl("is", () => symbols_IS.symbols);
final LocaleData IT = 
  new PluralLocaleDataImpl("it", () => symbols_IT.symbols);
final LocaleData IW = 
  new PluralLocaleDataImpl("iw", () => symbols_IW.symbols);
final LocaleData JA = 
  new PluralLocaleDataImpl("ja", () => symbols_JA.symbols);
final LocaleData KN = 
  new PluralLocaleDataImpl("kn", () => symbols_KN.symbols);
final LocaleData KO = 
  new PluralLocaleDataImpl("ko", () => symbols_KO.symbols);
final LocaleData LN = 
  new PluralLocaleDataImpl("ln", () => symbols_LN.symbols);
final LocaleData LT = 
  new PluralLocaleDataImpl("lt", () => symbols_LT.symbols);
final LocaleData LV = 
  new PluralLocaleDataImpl("lv", () => symbols_LV.symbols);
final LocaleData ML = 
  new PluralLocaleDataImpl("ml", () => symbols_ML.symbols);
final LocaleData MR = 
  new PluralLocaleDataImpl("mr", () => symbols_MR.symbols);
final LocaleData MS = 
  new PluralLocaleDataImpl("ms", () => symbols_MS.symbols);
final LocaleData MT = 
  new PluralLocaleDataImpl("mt", () => symbols_MT.symbols);
final LocaleData NL = 
  new PluralLocaleDataImpl("nl", () => symbols_NL.symbols);
final LocaleData NO = 
  new PluralLocaleDataImpl("no", () => symbols_NO.symbols);
final LocaleData OR = 
  new PluralLocaleDataImpl("or", () => symbols_OR.symbols);
final LocaleData PL = 
  new PluralLocaleDataImpl("pl", () => symbols_PL.symbols);
final LocaleData PT = 
  new PluralLocaleDataImpl("pt", () => symbols_PT.symbols);
final LocaleData RO = 
  new PluralLocaleDataImpl("ro", () => symbols_RO.symbols);
final LocaleData RU = 
  new PluralLocaleDataImpl("ru", () => symbols_RU.symbols);
final LocaleData SK = 
  new PluralLocaleDataImpl("sk", () => symbols_SK.symbols);
final LocaleData SL = 
  new PluralLocaleDataImpl("sl", () => symbols_SL.symbols);
final LocaleData SQ = 
  new PluralLocaleDataImpl("sq", () => symbols_SQ.symbols);
final LocaleData SR = 
  new PluralLocaleDataImpl("sr", () => symbols_SR.symbols);
final LocaleData SV = 
  new PluralLocaleDataImpl("sv", () => symbols_SV.symbols);
final LocaleData SW = 
  new PluralLocaleDataImpl("sw", () => symbols_SW.symbols);
final LocaleData TA = 
  new PluralLocaleDataImpl("ta", () => symbols_TA.symbols);
final LocaleData TE = 
  new PluralLocaleDataImpl("te", () => symbols_TE.symbols);
final LocaleData TH = 
  new PluralLocaleDataImpl("th", () => symbols_TH.symbols);
final LocaleData TL = 
  new PluralLocaleDataImpl("tl", () => symbols_TL.symbols);
final LocaleData TR = 
  new PluralLocaleDataImpl("tr", () => symbols_TR.symbols);
final LocaleData UK = 
  new PluralLocaleDataImpl("uk", () => symbols_UK.symbols);
final LocaleData UR = 
  new PluralLocaleDataImpl("ur", () => symbols_UR.symbols);
final LocaleData VI = 
  new PluralLocaleDataImpl("vi", () => symbols_VI.symbols);
final LocaleData ZH = 
  new PluralLocaleDataImpl("zh", () => symbols_ZH.symbols);
final LocaleData ZU = 
  new PluralLocaleDataImpl("zu", () => symbols_ZU.symbols);

