// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// DO NOT EDIT. This file is autogenerated by script, see
// "intlx/tool/plural/code_build.dart"

library intlx.plural.plural_load_locale;

import 'dart:async';
import 'package:intlx/src/util.dart';
import 'package:intlx/src/plural/plural.dart';
@library_af
import 'package:intlx/src/plural/data/af.dart' as symbols_AF;
@library_am
import 'package:intlx/src/plural/data/am.dart' as symbols_AM;
@library_ar
import 'package:intlx/src/plural/data/ar.dart' as symbols_AR;
@library_bg
import 'package:intlx/src/plural/data/bg.dart' as symbols_BG;
@library_bn
import 'package:intlx/src/plural/data/bn.dart' as symbols_BN;
@library_ca
import 'package:intlx/src/plural/data/ca.dart' as symbols_CA;
@library_cs
import 'package:intlx/src/plural/data/cs.dart' as symbols_CS;
@library_da
import 'package:intlx/src/plural/data/da.dart' as symbols_DA;
@library_de
import 'package:intlx/src/plural/data/de.dart' as symbols_DE;
@library_el
import 'package:intlx/src/plural/data/el.dart' as symbols_EL;
@library_en
import 'package:intlx/src/plural/data/en.dart' as symbols_EN;
@library_es
import 'package:intlx/src/plural/data/es.dart' as symbols_ES;
@library_et
import 'package:intlx/src/plural/data/et.dart' as symbols_ET;
@library_eu
import 'package:intlx/src/plural/data/eu.dart' as symbols_EU;
@library_fa
import 'package:intlx/src/plural/data/fa.dart' as symbols_FA;
@library_fi
import 'package:intlx/src/plural/data/fi.dart' as symbols_FI;
@library_fil
import 'package:intlx/src/plural/data/fil.dart' as symbols_FIL;
@library_fr
import 'package:intlx/src/plural/data/fr.dart' as symbols_FR;
@library_gl
import 'package:intlx/src/plural/data/gl.dart' as symbols_GL;
@library_gsw
import 'package:intlx/src/plural/data/gsw.dart' as symbols_GSW;
@library_gu
import 'package:intlx/src/plural/data/gu.dart' as symbols_GU;
@library_he
import 'package:intlx/src/plural/data/he.dart' as symbols_HE;
@library_hi
import 'package:intlx/src/plural/data/hi.dart' as symbols_HI;
@library_hr
import 'package:intlx/src/plural/data/hr.dart' as symbols_HR;
@library_hu
import 'package:intlx/src/plural/data/hu.dart' as symbols_HU;
@library_id
import 'package:intlx/src/plural/data/id.dart' as symbols_ID;
@library_in
import 'package:intlx/src/plural/data/in.dart' as symbols_IN;
@library_is
import 'package:intlx/src/plural/data/is.dart' as symbols_IS;
@library_it
import 'package:intlx/src/plural/data/it.dart' as symbols_IT;
@library_iw
import 'package:intlx/src/plural/data/iw.dart' as symbols_IW;
@library_ja
import 'package:intlx/src/plural/data/ja.dart' as symbols_JA;
@library_kn
import 'package:intlx/src/plural/data/kn.dart' as symbols_KN;
@library_ko
import 'package:intlx/src/plural/data/ko.dart' as symbols_KO;
@library_ln
import 'package:intlx/src/plural/data/ln.dart' as symbols_LN;
@library_lt
import 'package:intlx/src/plural/data/lt.dart' as symbols_LT;
@library_lv
import 'package:intlx/src/plural/data/lv.dart' as symbols_LV;
@library_ml
import 'package:intlx/src/plural/data/ml.dart' as symbols_ML;
@library_mr
import 'package:intlx/src/plural/data/mr.dart' as symbols_MR;
@library_ms
import 'package:intlx/src/plural/data/ms.dart' as symbols_MS;
@library_mt
import 'package:intlx/src/plural/data/mt.dart' as symbols_MT;
@library_nl
import 'package:intlx/src/plural/data/nl.dart' as symbols_NL;
@library_no
import 'package:intlx/src/plural/data/no.dart' as symbols_NO;
@library_or
import 'package:intlx/src/plural/data/or.dart' as symbols_OR;
@library_pl
import 'package:intlx/src/plural/data/pl.dart' as symbols_PL;
@library_pt
import 'package:intlx/src/plural/data/pt.dart' as symbols_PT;
@library_ro
import 'package:intlx/src/plural/data/ro.dart' as symbols_RO;
@library_ru
import 'package:intlx/src/plural/data/ru.dart' as symbols_RU;
@library_sk
import 'package:intlx/src/plural/data/sk.dart' as symbols_SK;
@library_sl
import 'package:intlx/src/plural/data/sl.dart' as symbols_SL;
@library_sq
import 'package:intlx/src/plural/data/sq.dart' as symbols_SQ;
@library_sr
import 'package:intlx/src/plural/data/sr.dart' as symbols_SR;
@library_sv
import 'package:intlx/src/plural/data/sv.dart' as symbols_SV;
@library_sw
import 'package:intlx/src/plural/data/sw.dart' as symbols_SW;
@library_ta
import 'package:intlx/src/plural/data/ta.dart' as symbols_TA;
@library_te
import 'package:intlx/src/plural/data/te.dart' as symbols_TE;
@library_th
import 'package:intlx/src/plural/data/th.dart' as symbols_TH;
@library_tl
import 'package:intlx/src/plural/data/tl.dart' as symbols_TL;
@library_tr
import 'package:intlx/src/plural/data/tr.dart' as symbols_TR;
@library_uk
import 'package:intlx/src/plural/data/uk.dart' as symbols_UK;
@library_ur
import 'package:intlx/src/plural/data/ur.dart' as symbols_UR;
@library_vi
import 'package:intlx/src/plural/data/vi.dart' as symbols_VI;
@library_zh
import 'package:intlx/src/plural/data/zh.dart' as symbols_ZH;
@library_zu
import 'package:intlx/src/plural/data/zu.dart' as symbols_ZU;

const library_af = const DeferredLibrary('plural_symbols_af');
const library_am = const DeferredLibrary('plural_symbols_am');
const library_ar = const DeferredLibrary('plural_symbols_ar');
const library_bg = const DeferredLibrary('plural_symbols_bg');
const library_bn = const DeferredLibrary('plural_symbols_bn');
const library_ca = const DeferredLibrary('plural_symbols_ca');
const library_cs = const DeferredLibrary('plural_symbols_cs');
const library_da = const DeferredLibrary('plural_symbols_da');
const library_de = const DeferredLibrary('plural_symbols_de');
const library_el = const DeferredLibrary('plural_symbols_el');
const library_en = const DeferredLibrary('plural_symbols_en');
const library_es = const DeferredLibrary('plural_symbols_es');
const library_et = const DeferredLibrary('plural_symbols_et');
const library_eu = const DeferredLibrary('plural_symbols_eu');
const library_fa = const DeferredLibrary('plural_symbols_fa');
const library_fi = const DeferredLibrary('plural_symbols_fi');
const library_fil = const DeferredLibrary('plural_symbols_fil');
const library_fr = const DeferredLibrary('plural_symbols_fr');
const library_gl = const DeferredLibrary('plural_symbols_gl');
const library_gsw = const DeferredLibrary('plural_symbols_gsw');
const library_gu = const DeferredLibrary('plural_symbols_gu');
const library_he = const DeferredLibrary('plural_symbols_he');
const library_hi = const DeferredLibrary('plural_symbols_hi');
const library_hr = const DeferredLibrary('plural_symbols_hr');
const library_hu = const DeferredLibrary('plural_symbols_hu');
const library_id = const DeferredLibrary('plural_symbols_id');
const library_in = const DeferredLibrary('plural_symbols_in');
const library_is = const DeferredLibrary('plural_symbols_is');
const library_it = const DeferredLibrary('plural_symbols_it');
const library_iw = const DeferredLibrary('plural_symbols_iw');
const library_ja = const DeferredLibrary('plural_symbols_ja');
const library_kn = const DeferredLibrary('plural_symbols_kn');
const library_ko = const DeferredLibrary('plural_symbols_ko');
const library_ln = const DeferredLibrary('plural_symbols_ln');
const library_lt = const DeferredLibrary('plural_symbols_lt');
const library_lv = const DeferredLibrary('plural_symbols_lv');
const library_ml = const DeferredLibrary('plural_symbols_ml');
const library_mr = const DeferredLibrary('plural_symbols_mr');
const library_ms = const DeferredLibrary('plural_symbols_ms');
const library_mt = const DeferredLibrary('plural_symbols_mt');
const library_nl = const DeferredLibrary('plural_symbols_nl');
const library_no = const DeferredLibrary('plural_symbols_no');
const library_or = const DeferredLibrary('plural_symbols_or');
const library_pl = const DeferredLibrary('plural_symbols_pl');
const library_pt = const DeferredLibrary('plural_symbols_pt');
const library_ro = const DeferredLibrary('plural_symbols_ro');
const library_ru = const DeferredLibrary('plural_symbols_ru');
const library_sk = const DeferredLibrary('plural_symbols_sk');
const library_sl = const DeferredLibrary('plural_symbols_sl');
const library_sq = const DeferredLibrary('plural_symbols_sq');
const library_sr = const DeferredLibrary('plural_symbols_sr');
const library_sv = const DeferredLibrary('plural_symbols_sv');
const library_sw = const DeferredLibrary('plural_symbols_sw');
const library_ta = const DeferredLibrary('plural_symbols_ta');
const library_te = const DeferredLibrary('plural_symbols_te');
const library_th = const DeferredLibrary('plural_symbols_th');
const library_tl = const DeferredLibrary('plural_symbols_tl');
const library_tr = const DeferredLibrary('plural_symbols_tr');
const library_uk = const DeferredLibrary('plural_symbols_uk');
const library_ur = const DeferredLibrary('plural_symbols_ur');
const library_vi = const DeferredLibrary('plural_symbols_vi');
const library_zh = const DeferredLibrary('plural_symbols_zh');
const library_zu = const DeferredLibrary('plural_symbols_zu');


  const libraryMap = const <String, DeferredLibrary> {
  'af': library_af,
  'am': library_am,
  'ar': library_ar,
  'bg': library_bg,
  'bn': library_bn,
  'ca': library_ca,
  'cs': library_cs,
  'da': library_da,
  'de': library_de,
  'el': library_el,
  'en': library_en,
  'es': library_es,
  'et': library_et,
  'eu': library_eu,
  'fa': library_fa,
  'fi': library_fi,
  'fil': library_fil,
  'fr': library_fr,
  'gl': library_gl,
  'gsw': library_gsw,
  'gu': library_gu,
  'he': library_he,
  'hi': library_hi,
  'hr': library_hr,
  'hu': library_hu,
  'id': library_id,
  'in': library_in,
  'is': library_is,
  'it': library_it,
  'iw': library_iw,
  'ja': library_ja,
  'kn': library_kn,
  'ko': library_ko,
  'ln': library_ln,
  'lt': library_lt,
  'lv': library_lv,
  'ml': library_ml,
  'mr': library_mr,
  'ms': library_ms,
  'mt': library_mt,
  'nl': library_nl,
  'no': library_no,
  'or': library_or,
  'pl': library_pl,
  'pt': library_pt,
  'ro': library_ro,
  'ru': library_ru,
  'sk': library_sk,
  'sl': library_sl,
  'sq': library_sq,
  'sr': library_sr,
  'sv': library_sv,
  'sw': library_sw,
  'ta': library_ta,
  'te': library_te,
  'th': library_th,
  'tl': library_tl,
  'tr': library_tr,
  'uk': library_uk,
  'ur': library_ur,
  'vi': library_vi,
  'zh': library_zh,
  'zu': library_zu
  };

Future<bool> loadLocale([String locale]) {
  if(PluralLocaleImpl.map.containsKey(locale)) 
    return new Future.immediate(false);
  return libraryMap[locale].load().then((_) {
    init(PluralLocale pluralLocale) => 
      PluralLocaleImpl.map[locale] = pluralLocale;
    switch(locale) {
      case 'af': init(symbols_AF.symbols); break;
      case 'am': init(symbols_AM.symbols); break;
      case 'ar': init(symbols_AR.symbols); break;
      case 'bg': init(symbols_BG.symbols); break;
      case 'bn': init(symbols_BN.symbols); break;
      case 'ca': init(symbols_CA.symbols); break;
      case 'cs': init(symbols_CS.symbols); break;
      case 'da': init(symbols_DA.symbols); break;
      case 'de': init(symbols_DE.symbols); break;
      case 'el': init(symbols_EL.symbols); break;
      case 'en': init(symbols_EN.symbols); break;
      case 'es': init(symbols_ES.symbols); break;
      case 'et': init(symbols_ET.symbols); break;
      case 'eu': init(symbols_EU.symbols); break;
      case 'fa': init(symbols_FA.symbols); break;
      case 'fi': init(symbols_FI.symbols); break;
      case 'fil': init(symbols_FIL.symbols); break;
      case 'fr': init(symbols_FR.symbols); break;
      case 'gl': init(symbols_GL.symbols); break;
      case 'gsw': init(symbols_GSW.symbols); break;
      case 'gu': init(symbols_GU.symbols); break;
      case 'he': init(symbols_HE.symbols); break;
      case 'hi': init(symbols_HI.symbols); break;
      case 'hr': init(symbols_HR.symbols); break;
      case 'hu': init(symbols_HU.symbols); break;
      case 'id': init(symbols_ID.symbols); break;
      case 'in': init(symbols_IN.symbols); break;
      case 'is': init(symbols_IS.symbols); break;
      case 'it': init(symbols_IT.symbols); break;
      case 'iw': init(symbols_IW.symbols); break;
      case 'ja': init(symbols_JA.symbols); break;
      case 'kn': init(symbols_KN.symbols); break;
      case 'ko': init(symbols_KO.symbols); break;
      case 'ln': init(symbols_LN.symbols); break;
      case 'lt': init(symbols_LT.symbols); break;
      case 'lv': init(symbols_LV.symbols); break;
      case 'ml': init(symbols_ML.symbols); break;
      case 'mr': init(symbols_MR.symbols); break;
      case 'ms': init(symbols_MS.symbols); break;
      case 'mt': init(symbols_MT.symbols); break;
      case 'nl': init(symbols_NL.symbols); break;
      case 'no': init(symbols_NO.symbols); break;
      case 'or': init(symbols_OR.symbols); break;
      case 'pl': init(symbols_PL.symbols); break;
      case 'pt': init(symbols_PT.symbols); break;
      case 'ro': init(symbols_RO.symbols); break;
      case 'ru': init(symbols_RU.symbols); break;
      case 'sk': init(symbols_SK.symbols); break;
      case 'sl': init(symbols_SL.symbols); break;
      case 'sq': init(symbols_SQ.symbols); break;
      case 'sr': init(symbols_SR.symbols); break;
      case 'sv': init(symbols_SV.symbols); break;
      case 'sw': init(symbols_SW.symbols); break;
      case 'ta': init(symbols_TA.symbols); break;
      case 'te': init(symbols_TE.symbols); break;
      case 'th': init(symbols_TH.symbols); break;
      case 'tl': init(symbols_TL.symbols); break;
      case 'tr': init(symbols_TR.symbols); break;
      case 'uk': init(symbols_UK.symbols); break;
      case 'ur': init(symbols_UR.symbols); break;
      case 'vi': init(symbols_VI.symbols); break;
      case 'zh': init(symbols_ZH.symbols); break;
      case 'zu': init(symbols_ZU.symbols); break;

    }
    return true;
  });
}
