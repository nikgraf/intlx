// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

/// DO NOT EDIT. This file is autogenerated by script, see
/// "<this package>/tool/relative_time/code_build.dart"

part of relative_time_locale_data;

final LocaleData AF = new RelativeTimeLocaleDataImpl("af", () => symbols_AF, plural_locale_data.AF);
final LocaleData AM = new RelativeTimeLocaleDataImpl("am", () => symbols_AM, plural_locale_data.AM);
final LocaleData AR = new RelativeTimeLocaleDataImpl("ar", () => symbols_AR, plural_locale_data.AR);
final LocaleData BG = new RelativeTimeLocaleDataImpl("bg", () => symbols_BG, plural_locale_data.BG);
final LocaleData BN = new RelativeTimeLocaleDataImpl("bn", () => symbols_BN, plural_locale_data.BN);
final LocaleData CA = new RelativeTimeLocaleDataImpl("ca", () => symbols_CA, plural_locale_data.CA);
final LocaleData CS = new RelativeTimeLocaleDataImpl("cs", () => symbols_CS, plural_locale_data.CS);
final LocaleData DA = new RelativeTimeLocaleDataImpl("da", () => symbols_DA, plural_locale_data.DA);
final LocaleData DE = new RelativeTimeLocaleDataImpl("de", () => symbols_DE, plural_locale_data.DE);
final LocaleData DE_AT = new RelativeTimeLocaleDataImpl("de_AT", () => symbols_DE_AT, plural_locale_data.DE_AT);
final LocaleData DE_CH = new RelativeTimeLocaleDataImpl("de_CH", () => symbols_DE_CH, plural_locale_data.DE_CH);
final LocaleData EL = new RelativeTimeLocaleDataImpl("el", () => symbols_EL, plural_locale_data.EL);
final LocaleData EN = new RelativeTimeLocaleDataImpl("en", () => symbols_EN, plural_locale_data.EN);
final LocaleData EN_AU = new RelativeTimeLocaleDataImpl("en_AU", () => symbols_EN_AU, plural_locale_data.EN_AU);
final LocaleData EN_GB = new RelativeTimeLocaleDataImpl("en_GB", () => symbols_EN_GB, plural_locale_data.EN_GB);
final LocaleData EN_IE = new RelativeTimeLocaleDataImpl("en_IE", () => symbols_EN_IE, plural_locale_data.EN_IE);
final LocaleData EN_IN = new RelativeTimeLocaleDataImpl("en_IN", () => symbols_EN_IN, plural_locale_data.EN_IN);
final LocaleData EN_SG = new RelativeTimeLocaleDataImpl("en_SG", () => symbols_EN_SG, plural_locale_data.EN_SG);
final LocaleData EN_US = new RelativeTimeLocaleDataImpl("en_US", () => symbols_EN_US, plural_locale_data.EN_US);
final LocaleData EN_ZA = new RelativeTimeLocaleDataImpl("en_ZA", () => symbols_EN_ZA, plural_locale_data.EN_ZA);
final LocaleData ES = new RelativeTimeLocaleDataImpl("es", () => symbols_ES, plural_locale_data.ES);
final LocaleData ES_419 = new RelativeTimeLocaleDataImpl("es_419", () => symbols_ES_419, plural_locale_data.ES_419);
final LocaleData ET = new RelativeTimeLocaleDataImpl("et", () => symbols_ET, plural_locale_data.ET);
final LocaleData EU = new RelativeTimeLocaleDataImpl("eu", () => symbols_EU, plural_locale_data.EU);
final LocaleData FA = new RelativeTimeLocaleDataImpl("fa", () => symbols_FA, plural_locale_data.FA);
final LocaleData FI = new RelativeTimeLocaleDataImpl("fi", () => symbols_FI, plural_locale_data.FI);
final LocaleData FIL = new RelativeTimeLocaleDataImpl("fil", () => symbols_FIL, plural_locale_data.FIL);
final LocaleData FR = new RelativeTimeLocaleDataImpl("fr", () => symbols_FR, plural_locale_data.FR);
final LocaleData FR_CA = new RelativeTimeLocaleDataImpl("fr_CA", () => symbols_FR_CA, plural_locale_data.FR_CA);
final LocaleData GL = new RelativeTimeLocaleDataImpl("gl", () => symbols_GL, plural_locale_data.GL);
final LocaleData GSW = new RelativeTimeLocaleDataImpl("gsw", () => symbols_GSW, plural_locale_data.GSW);
final LocaleData GU = new RelativeTimeLocaleDataImpl("gu", () => symbols_GU, plural_locale_data.GU);
final LocaleData HE = new RelativeTimeLocaleDataImpl("he", () => symbols_HE, plural_locale_data.HE);
final LocaleData HI = new RelativeTimeLocaleDataImpl("hi", () => symbols_HI, plural_locale_data.HI);
final LocaleData HR = new RelativeTimeLocaleDataImpl("hr", () => symbols_HR, plural_locale_data.HR);
final LocaleData HU = new RelativeTimeLocaleDataImpl("hu", () => symbols_HU, plural_locale_data.HU);
final LocaleData ID = new RelativeTimeLocaleDataImpl("id", () => symbols_ID, plural_locale_data.ID);
final LocaleData IN = new RelativeTimeLocaleDataImpl("in", () => symbols_IN, plural_locale_data.IN);
final LocaleData IS = new RelativeTimeLocaleDataImpl("is", () => symbols_IS, plural_locale_data.IS);
final LocaleData IT = new RelativeTimeLocaleDataImpl("it", () => symbols_IT, plural_locale_data.IT);
final LocaleData IW = new RelativeTimeLocaleDataImpl("iw", () => symbols_IW, plural_locale_data.IW);
final LocaleData JA = new RelativeTimeLocaleDataImpl("ja", () => symbols_JA, plural_locale_data.JA);
final LocaleData KN = new RelativeTimeLocaleDataImpl("kn", () => symbols_KN, plural_locale_data.KN);
final LocaleData KO = new RelativeTimeLocaleDataImpl("ko", () => symbols_KO, plural_locale_data.KO);
final LocaleData LN = new RelativeTimeLocaleDataImpl("ln", () => symbols_LN, plural_locale_data.LN);
final LocaleData LT = new RelativeTimeLocaleDataImpl("lt", () => symbols_LT, plural_locale_data.LT);
final LocaleData LV = new RelativeTimeLocaleDataImpl("lv", () => symbols_LV, plural_locale_data.LV);
final LocaleData ML = new RelativeTimeLocaleDataImpl("ml", () => symbols_ML, plural_locale_data.ML);
final LocaleData MR = new RelativeTimeLocaleDataImpl("mr", () => symbols_MR, plural_locale_data.MR);
final LocaleData MS = new RelativeTimeLocaleDataImpl("ms", () => symbols_MS, plural_locale_data.MS);
final LocaleData MT = new RelativeTimeLocaleDataImpl("mt", () => symbols_MT, plural_locale_data.MT);
final LocaleData NL = new RelativeTimeLocaleDataImpl("nl", () => symbols_NL, plural_locale_data.NL);
final LocaleData NO = new RelativeTimeLocaleDataImpl("no", () => symbols_NO, plural_locale_data.NO);
final LocaleData OR = new RelativeTimeLocaleDataImpl("or", () => symbols_OR, plural_locale_data.OR);
final LocaleData PL = new RelativeTimeLocaleDataImpl("pl", () => symbols_PL, plural_locale_data.PL);
final LocaleData PT = new RelativeTimeLocaleDataImpl("pt", () => symbols_PT, plural_locale_data.PT);
final LocaleData PT_BR = new RelativeTimeLocaleDataImpl("pt_BR", () => symbols_PT_BR, plural_locale_data.PT_BR);
final LocaleData PT_PT = new RelativeTimeLocaleDataImpl("pt_PT", () => symbols_PT_PT, plural_locale_data.PT_PT);
final LocaleData RO = new RelativeTimeLocaleDataImpl("ro", () => symbols_RO, plural_locale_data.RO);
final LocaleData RU = new RelativeTimeLocaleDataImpl("ru", () => symbols_RU, plural_locale_data.RU);
final LocaleData SK = new RelativeTimeLocaleDataImpl("sk", () => symbols_SK, plural_locale_data.SK);
final LocaleData SL = new RelativeTimeLocaleDataImpl("sl", () => symbols_SL, plural_locale_data.SL);
final LocaleData SQ = new RelativeTimeLocaleDataImpl("sq", () => symbols_SQ, plural_locale_data.SQ);
final LocaleData SR = new RelativeTimeLocaleDataImpl("sr", () => symbols_SR, plural_locale_data.SR);
final LocaleData SV = new RelativeTimeLocaleDataImpl("sv", () => symbols_SV, plural_locale_data.SV);
final LocaleData SW = new RelativeTimeLocaleDataImpl("sw", () => symbols_SW, plural_locale_data.SW);
final LocaleData TA = new RelativeTimeLocaleDataImpl("ta", () => symbols_TA, plural_locale_data.TA);
final LocaleData TE = new RelativeTimeLocaleDataImpl("te", () => symbols_TE, plural_locale_data.TE);
final LocaleData TH = new RelativeTimeLocaleDataImpl("th", () => symbols_TH, plural_locale_data.TH);
final LocaleData TL = new RelativeTimeLocaleDataImpl("tl", () => symbols_TL, plural_locale_data.TL);
final LocaleData TR = new RelativeTimeLocaleDataImpl("tr", () => symbols_TR, plural_locale_data.TR);
final LocaleData UK = new RelativeTimeLocaleDataImpl("uk", () => symbols_UK, plural_locale_data.UK);
final LocaleData UR = new RelativeTimeLocaleDataImpl("ur", () => symbols_UR, plural_locale_data.UR);
final LocaleData VI = new RelativeTimeLocaleDataImpl("vi", () => symbols_VI, plural_locale_data.VI);
final LocaleData ZH = new RelativeTimeLocaleDataImpl("zh", () => symbols_ZH, plural_locale_data.ZH);
final LocaleData ZH_CN = new RelativeTimeLocaleDataImpl("zh_CN", () => symbols_ZH_CN, plural_locale_data.ZH_CN);
final LocaleData ZH_HK = new RelativeTimeLocaleDataImpl("zh_HK", () => symbols_ZH_HK, plural_locale_data.ZH_HK);
final LocaleData ZH_TW = new RelativeTimeLocaleDataImpl("zh_TW", () => symbols_ZH_TW, plural_locale_data.ZH_TW);
final LocaleData ZU = new RelativeTimeLocaleDataImpl("zu", () => symbols_ZU, plural_locale_data.ZU);
