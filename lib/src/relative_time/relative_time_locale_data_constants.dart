// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// DO NOT EDIT. This file is autogenerated by script, see
// "intlx/tool/relative_time/code_build.dart"

part of relative_time_locale_data;

final LocaleData AF = 
  new RelativeTimeLocaleDataImpl("af", () => symbols_AF.symbols, plural_locale_data.AF);
final LocaleData AM = 
  new RelativeTimeLocaleDataImpl("am", () => symbols_AM.symbols, plural_locale_data.AM);
final LocaleData AR = 
  new RelativeTimeLocaleDataImpl("ar", () => symbols_AR.symbols, plural_locale_data.AR);
final LocaleData BG = 
  new RelativeTimeLocaleDataImpl("bg", () => symbols_BG.symbols, plural_locale_data.BG);
final LocaleData BN = 
  new RelativeTimeLocaleDataImpl("bn", () => symbols_BN.symbols, plural_locale_data.BN);
final LocaleData CA = 
  new RelativeTimeLocaleDataImpl("ca", () => symbols_CA.symbols, plural_locale_data.CA);
final LocaleData CS = 
  new RelativeTimeLocaleDataImpl("cs", () => symbols_CS.symbols, plural_locale_data.CS);
final LocaleData DA = 
  new RelativeTimeLocaleDataImpl("da", () => symbols_DA.symbols, plural_locale_data.DA);
final LocaleData DE = 
  new RelativeTimeLocaleDataImpl("de", () => symbols_DE.symbols, plural_locale_data.DE);
final LocaleData DE_AT = 
  new RelativeTimeLocaleDataImpl("de_AT", () => symbols_DE_AT.symbols, plural_locale_data.DE);
final LocaleData DE_CH = 
  new RelativeTimeLocaleDataImpl("de_CH", () => symbols_DE_CH.symbols, plural_locale_data.DE);
final LocaleData EL = 
  new RelativeTimeLocaleDataImpl("el", () => symbols_EL.symbols, plural_locale_data.EL);
final LocaleData EN = 
  new RelativeTimeLocaleDataImpl("en", () => symbols_EN.symbols, plural_locale_data.EN);
final LocaleData EN_AU = 
  new RelativeTimeLocaleDataImpl("en_AU", () => symbols_EN_AU.symbols, plural_locale_data.EN);
final LocaleData EN_GB = 
  new RelativeTimeLocaleDataImpl("en_GB", () => symbols_EN_GB.symbols, plural_locale_data.EN);
final LocaleData EN_IE = 
  new RelativeTimeLocaleDataImpl("en_IE", () => symbols_EN_IE.symbols, plural_locale_data.EN);
final LocaleData EN_IN = 
  new RelativeTimeLocaleDataImpl("en_IN", () => symbols_EN_IN.symbols, plural_locale_data.EN);
final LocaleData EN_SG = 
  new RelativeTimeLocaleDataImpl("en_SG", () => symbols_EN_SG.symbols, plural_locale_data.EN);
final LocaleData EN_US = 
  new RelativeTimeLocaleDataImpl("en_US", () => symbols_EN_US.symbols, plural_locale_data.EN);
final LocaleData EN_ZA = 
  new RelativeTimeLocaleDataImpl("en_ZA", () => symbols_EN_ZA.symbols, plural_locale_data.EN);
final LocaleData ES = 
  new RelativeTimeLocaleDataImpl("es", () => symbols_ES.symbols, plural_locale_data.ES);
final LocaleData ES_419 = 
  new RelativeTimeLocaleDataImpl("es_419", () => symbols_ES_419.symbols, plural_locale_data.ES);
final LocaleData ET = 
  new RelativeTimeLocaleDataImpl("et", () => symbols_ET.symbols, plural_locale_data.ET);
final LocaleData EU = 
  new RelativeTimeLocaleDataImpl("eu", () => symbols_EU.symbols, plural_locale_data.EU);
final LocaleData FA = 
  new RelativeTimeLocaleDataImpl("fa", () => symbols_FA.symbols, plural_locale_data.FA);
final LocaleData FI = 
  new RelativeTimeLocaleDataImpl("fi", () => symbols_FI.symbols, plural_locale_data.FI);
final LocaleData FIL = 
  new RelativeTimeLocaleDataImpl("fil", () => symbols_FIL.symbols, plural_locale_data.FIL);
final LocaleData FR = 
  new RelativeTimeLocaleDataImpl("fr", () => symbols_FR.symbols, plural_locale_data.FR);
final LocaleData FR_CA = 
  new RelativeTimeLocaleDataImpl("fr_CA", () => symbols_FR_CA.symbols, plural_locale_data.FR);
final LocaleData GL = 
  new RelativeTimeLocaleDataImpl("gl", () => symbols_GL.symbols, plural_locale_data.GL);
final LocaleData GSW = 
  new RelativeTimeLocaleDataImpl("gsw", () => symbols_GSW.symbols, plural_locale_data.GSW);
final LocaleData GU = 
  new RelativeTimeLocaleDataImpl("gu", () => symbols_GU.symbols, plural_locale_data.GU);
final LocaleData HE = 
  new RelativeTimeLocaleDataImpl("he", () => symbols_HE.symbols, plural_locale_data.HE);
final LocaleData HI = 
  new RelativeTimeLocaleDataImpl("hi", () => symbols_HI.symbols, plural_locale_data.HI);
final LocaleData HR = 
  new RelativeTimeLocaleDataImpl("hr", () => symbols_HR.symbols, plural_locale_data.HR);
final LocaleData HU = 
  new RelativeTimeLocaleDataImpl("hu", () => symbols_HU.symbols, plural_locale_data.HU);
final LocaleData ID = 
  new RelativeTimeLocaleDataImpl("id", () => symbols_ID.symbols, plural_locale_data.ID);
final LocaleData IN = 
  new RelativeTimeLocaleDataImpl("in", () => symbols_IN.symbols, plural_locale_data.IN);
final LocaleData IS = 
  new RelativeTimeLocaleDataImpl("is", () => symbols_IS.symbols, plural_locale_data.IS);
final LocaleData IT = 
  new RelativeTimeLocaleDataImpl("it", () => symbols_IT.symbols, plural_locale_data.IT);
final LocaleData IW = 
  new RelativeTimeLocaleDataImpl("iw", () => symbols_IW.symbols, plural_locale_data.IW);
final LocaleData JA = 
  new RelativeTimeLocaleDataImpl("ja", () => symbols_JA.symbols, plural_locale_data.JA);
final LocaleData KN = 
  new RelativeTimeLocaleDataImpl("kn", () => symbols_KN.symbols, plural_locale_data.KN);
final LocaleData KO = 
  new RelativeTimeLocaleDataImpl("ko", () => symbols_KO.symbols, plural_locale_data.KO);
final LocaleData LN = 
  new RelativeTimeLocaleDataImpl("ln", () => symbols_LN.symbols, plural_locale_data.LN);
final LocaleData LT = 
  new RelativeTimeLocaleDataImpl("lt", () => symbols_LT.symbols, plural_locale_data.LT);
final LocaleData LV = 
  new RelativeTimeLocaleDataImpl("lv", () => symbols_LV.symbols, plural_locale_data.LV);
final LocaleData ML = 
  new RelativeTimeLocaleDataImpl("ml", () => symbols_ML.symbols, plural_locale_data.ML);
final LocaleData MR = 
  new RelativeTimeLocaleDataImpl("mr", () => symbols_MR.symbols, plural_locale_data.MR);
final LocaleData MS = 
  new RelativeTimeLocaleDataImpl("ms", () => symbols_MS.symbols, plural_locale_data.MS);
final LocaleData MT = 
  new RelativeTimeLocaleDataImpl("mt", () => symbols_MT.symbols, plural_locale_data.MT);
final LocaleData NL = 
  new RelativeTimeLocaleDataImpl("nl", () => symbols_NL.symbols, plural_locale_data.NL);
final LocaleData NO = 
  new RelativeTimeLocaleDataImpl("no", () => symbols_NO.symbols, plural_locale_data.NO);
final LocaleData OR = 
  new RelativeTimeLocaleDataImpl("or", () => symbols_OR.symbols, plural_locale_data.OR);
final LocaleData PL = 
  new RelativeTimeLocaleDataImpl("pl", () => symbols_PL.symbols, plural_locale_data.PL);
final LocaleData PT = 
  new RelativeTimeLocaleDataImpl("pt", () => symbols_PT.symbols, plural_locale_data.PT);
final LocaleData PT_BR = 
  new RelativeTimeLocaleDataImpl("pt_BR", () => symbols_PT_BR.symbols, plural_locale_data.PT);
final LocaleData PT_PT = 
  new RelativeTimeLocaleDataImpl("pt_PT", () => symbols_PT_PT.symbols, plural_locale_data.PT);
final LocaleData RO = 
  new RelativeTimeLocaleDataImpl("ro", () => symbols_RO.symbols, plural_locale_data.RO);
final LocaleData RU = 
  new RelativeTimeLocaleDataImpl("ru", () => symbols_RU.symbols, plural_locale_data.RU);
final LocaleData SK = 
  new RelativeTimeLocaleDataImpl("sk", () => symbols_SK.symbols, plural_locale_data.SK);
final LocaleData SL = 
  new RelativeTimeLocaleDataImpl("sl", () => symbols_SL.symbols, plural_locale_data.SL);
final LocaleData SQ = 
  new RelativeTimeLocaleDataImpl("sq", () => symbols_SQ.symbols, plural_locale_data.SQ);
final LocaleData SR = 
  new RelativeTimeLocaleDataImpl("sr", () => symbols_SR.symbols, plural_locale_data.SR);
final LocaleData SV = 
  new RelativeTimeLocaleDataImpl("sv", () => symbols_SV.symbols, plural_locale_data.SV);
final LocaleData SW = 
  new RelativeTimeLocaleDataImpl("sw", () => symbols_SW.symbols, plural_locale_data.SW);
final LocaleData TA = 
  new RelativeTimeLocaleDataImpl("ta", () => symbols_TA.symbols, plural_locale_data.TA);
final LocaleData TE = 
  new RelativeTimeLocaleDataImpl("te", () => symbols_TE.symbols, plural_locale_data.TE);
final LocaleData TH = 
  new RelativeTimeLocaleDataImpl("th", () => symbols_TH.symbols, plural_locale_data.TH);
final LocaleData TL = 
  new RelativeTimeLocaleDataImpl("tl", () => symbols_TL.symbols, plural_locale_data.TL);
final LocaleData TR = 
  new RelativeTimeLocaleDataImpl("tr", () => symbols_TR.symbols, plural_locale_data.TR);
final LocaleData UK = 
  new RelativeTimeLocaleDataImpl("uk", () => symbols_UK.symbols, plural_locale_data.UK);
final LocaleData UR = 
  new RelativeTimeLocaleDataImpl("ur", () => symbols_UR.symbols, plural_locale_data.UR);
final LocaleData VI = 
  new RelativeTimeLocaleDataImpl("vi", () => symbols_VI.symbols, plural_locale_data.VI);
final LocaleData ZH = 
  new RelativeTimeLocaleDataImpl("zh", () => symbols_ZH.symbols, plural_locale_data.ZH);
final LocaleData ZH_CN = 
  new RelativeTimeLocaleDataImpl("zh_CN", () => symbols_ZH_CN.symbols, plural_locale_data.ZH);
final LocaleData ZH_HK = 
  new RelativeTimeLocaleDataImpl("zh_HK", () => symbols_ZH_HK.symbols, plural_locale_data.ZH);
final LocaleData ZH_TW = 
  new RelativeTimeLocaleDataImpl("zh_TW", () => symbols_ZH_TW.symbols, plural_locale_data.ZH);
final LocaleData ZU = 
  new RelativeTimeLocaleDataImpl("zu", () => symbols_ZU.symbols, plural_locale_data.ZU);
